<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-PSDocument</command:name>
      <command:verb>Get</command:verb>
      <command:noun>PSDocument</command:noun>
      <maml:description>
        <maml:para>Get document definitions.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Gets a list of document definitions from paths and modules. Document definitions are discovered within files ending in `.Doc.ps1`. By default, definitions will be be discovered from the current working path. Use `-Module` to discover definitions from modules.</maml:para>
      <maml:para>A document is defined using the `Document` keyword.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-PSDocument</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="p">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>A list of paths to check for document definitions.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>$PWD</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="m">
          <maml:name>Module</maml:name>
          <maml:description>
            <maml:para>List document definitions in the specified modules. When specified, only document definitions from modules will be listed. To additionally list document definitions in paths use `-Path` together with `-Module`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ListAvailable</maml:name>
          <maml:description>
            <maml:para>Get document definitions from all modules even ones that are not imported.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="n">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of specific document definitions to return.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Option</maml:name>
          <maml:description>
            <maml:para>Additional options that configure PSDocs. A `PSDocumentOption` can be created by using the `New-PSDocumentOption` cmdlet. Alternatively a hashtable or path to YAML file can be specified with options.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSDocumentOption</command:parameterValue>
          <dev:type>
            <maml:name>PSDocumentOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="m">
        <maml:name>Module</maml:name>
        <maml:description>
          <maml:para>List document definitions in the specified modules. When specified, only document definitions from modules will be listed. To additionally list document definitions in paths use `-Path` together with `-Module`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ListAvailable</maml:name>
        <maml:description>
          <maml:para>Get document definitions from all modules even ones that are not imported.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="p">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>A list of paths to check for document definitions.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>$PWD</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="n">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of specific document definitions to return.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Option</maml:name>
        <maml:description>
          <maml:para>Additional options that configure PSDocs. A `PSDocumentOption` can be created by using the `New-PSDocumentOption` cmdlet. Alternatively a hashtable or path to YAML file can be specified with options.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSDocumentOption</command:parameterValue>
        <dev:type>
          <maml:name>PSDocumentOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>PSDocs.Definitions.IDocumentDefinition</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>An instance of a document definition.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>Get-PSDocument;</dev:code>
        <dev:remarks>
          <maml:para>Get a list of document definitions from the current working path.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/Microsoft/PSDocs/blob/main/docs/commands/PSDocs/en-US/Get-PSDocument.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-PSDocument</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-PSDocumentHeader</command:name>
      <command:verb>Get</command:verb>
      <command:noun>PSDocumentHeader</command:noun>
      <maml:description>
        <maml:para>Get the Yaml header from a PSDocs generated markdown file.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Get the Yaml header from a PSDocs generated markdown file.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-PSDocumentHeader</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="FullName">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>The path to a specific markdown file or a parent directory containing one or more markdown files. A trailing slash is not required.</maml:para>
            <maml:para>If a path is not specified the current working path will be used.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>$PWD</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="FullName">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>The path to a specific markdown file or a parent directory containing one or more markdown files. A trailing slash is not required.</maml:para>
          <maml:para>If a path is not specified the current working path will be used.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>$PWD</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Get-PSDocumentHeader -Path '.\build\Default';</dev:code>
        <dev:remarks>
          <maml:para>Get the Yaml header for all markdown files in the Default directory.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Get-PSDocumentHeader -Path '.\build\Default\Server1.md';</dev:code>
        <dev:remarks>
          <maml:para>Get the Yaml header for a specific file Server1.md.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 3 --------------------------</maml:title>
        <dev:code>PS C:\&gt; Get-PSDocumentHeader;</dev:code>
        <dev:remarks>
          <maml:para>Get the Yaml header for all markdown files in the current working directory.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/Microsoft/PSDocs/blob/main/docs/commands/PSDocs/en-US/Get-PSDocumentHeader.md</maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Invoke-PSDocument</command:name>
      <command:verb>Invoke</command:verb>
      <command:noun>PSDocument</command:noun>
      <maml:description>
        <maml:para>Create markdown from an input object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Create markdown from an input object using a document definition. Document definitions are discovered within files ending in `.Doc.ps1`. By default, definitions will be be discovered from the current working path. Use `-Module` to discover definitions from modules.</maml:para>
      <maml:para>A document is defined using the `Document` keyword.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-PSDocument</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="p">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>A list of paths to use document definitions from.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="m">
          <maml:name>Module</maml:name>
          <maml:description>
            <maml:para>Get document definitions in the specified modules. When specified, only document definitions from modules will be used. To additionally use document definitions in paths use `-Path` together with `-Module`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="n">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of a specific document definitions to use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:description>
            <maml:para>One or more tags that the document definition must contain. If more then one tag is specified, all tags be present on the document definition to be evaluated.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InstanceName</maml:name>
          <maml:description>
            <maml:para>The name of the resulting markdown file. During execution of this command, the variable `$InstanceName` will be available within the document definition for use by expressions.</maml:para>
            <maml:para>If InstanceName is not specified the name of the document definition will be used instead. If more then one InstanceName is specified, multiple markdown files will be generated in the order they were specified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="InputFormat">
          <maml:name>Format</maml:name>
          <maml:description>
            <maml:para>Configures the input format for when a string is passed in as a target object.</maml:para>
            <maml:para>When the `-InputObject` parameter or pipeline input is used, strings are treated as plain text by default. Set this option to either `Yaml`, `Json`, `PowerShellData` to have PSDocs deserialize the object.</maml:para>
            <maml:para>When the `-InputPath` parameter is used with a file path or URL. If the Detect format is used, the file extension will be used to automatically detect the format. When `-InputPath` is not used, `Detect` is the same as `None`.</maml:para>
            <maml:para>See `about_PSDocs_Options` for details.</maml:para>
            <maml:para>This parameter takes precedence over the `Input.Format` option if set.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yaml</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Json</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellData</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Detect</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">InputFormat</command:parameterValue>
          <dev:type>
            <maml:name>InputFormat</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="f">
          <maml:name>InputPath</maml:name>
          <maml:description>
            <maml:para>Instead of processing objects from the pipeline, import objects file the specified file paths.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>The directory path to store markdown files created based on the specified document template. This path will be automatically created if it doesn't exist.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>When specified generated markdown will be returned to the pipeline instead of being written to file.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Option</maml:name>
          <maml:description>
            <maml:para>Additional options that configure PSDocs. A `PSDocumentOption` can be created by using the `New-PSDocumentOption` cmdlet. Alternatively a hashtable or path to YAML file can be specified with options.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSDocumentOption</command:parameterValue>
          <dev:type>
            <maml:name>PSDocumentOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>Specifies the file encoding for generated markdown files. By default, UTF-8 without byte order mark (BOM) will be used. To use UTF-8 with BOM specify `UTF8`.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Unicode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF32</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ASCII</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">MarkdownEncoding</command:parameterValue>
          <dev:type>
            <maml:name>MarkdownEncoding</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Default</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Culture</maml:name>
          <maml:description>
            <maml:para>A list of cultures for building documents such as en-AU , and en-US . Documents are written to culture specific subdirectories when multiple cultures are generated.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Convention</maml:name>
          <maml:description>
            <maml:para>Specifies the name of conventions to execute during document generation.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-PSDocument</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="p">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>A list of paths to use document definitions from.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="m">
          <maml:name>Module</maml:name>
          <maml:description>
            <maml:para>Get document definitions in the specified modules. When specified, only document definitions from modules will be used. To additionally use document definitions in paths use `-Path` together with `-Module`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="n">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of a specific document definitions to use.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Tag</maml:name>
          <maml:description>
            <maml:para>One or more tags that the document definition must contain. If more then one tag is specified, all tags be present on the document definition to be evaluated.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InstanceName</maml:name>
          <maml:description>
            <maml:para>The name of the resulting markdown file. During execution of this command, the variable `$InstanceName` will be available within the document definition for use by expressions.</maml:para>
            <maml:para>If InstanceName is not specified the name of the document definition will be used instead. If more then one InstanceName is specified, multiple markdown files will be generated in the order they were specified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="InputFormat">
          <maml:name>Format</maml:name>
          <maml:description>
            <maml:para>Configures the input format for when a string is passed in as a target object.</maml:para>
            <maml:para>When the `-InputObject` parameter or pipeline input is used, strings are treated as plain text by default. Set this option to either `Yaml`, `Json`, `PowerShellData` to have PSDocs deserialize the object.</maml:para>
            <maml:para>When the `-InputPath` parameter is used with a file path or URL. If the Detect format is used, the file extension will be used to automatically detect the format. When `-InputPath` is not used, `Detect` is the same as `None`.</maml:para>
            <maml:para>See `about_PSDocs_Options` for details.</maml:para>
            <maml:para>This parameter takes precedence over the `Input.Format` option if set.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yaml</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Json</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellData</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Detect</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">InputFormat</command:parameterValue>
          <dev:type>
            <maml:name>InputFormat</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>An input object that will be passed to each document and can be referenced within document blocks as `$TargetObject`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
          <dev:type>
            <maml:name>PSObject</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>The directory path to store markdown files created based on the specified document template. This path will be automatically created if it doesn't exist.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>When specified generated markdown will be returned to the pipeline instead of being written to file.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Option</maml:name>
          <maml:description>
            <maml:para>Additional options that configure PSDocs. A `PSDocumentOption` can be created by using the `New-PSDocumentOption` cmdlet. Alternatively a hashtable or path to YAML file can be specified with options.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSDocumentOption</command:parameterValue>
          <dev:type>
            <maml:name>PSDocumentOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>Specifies the file encoding for generated markdown files. By default, UTF-8 without byte order mark (BOM) will be used. To use UTF-8 with BOM specify `UTF8`.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Unicode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF32</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ASCII</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">MarkdownEncoding</command:parameterValue>
          <dev:type>
            <maml:name>MarkdownEncoding</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Default</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Culture</maml:name>
          <maml:description>
            <maml:para>A list of cultures for building documents such as en-AU , and en-US . Documents are written to culture specific subdirectories when multiple cultures are generated.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Convention</maml:name>
          <maml:description>
            <maml:para>Specifies the name of conventions to execute during document generation.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="m">
        <maml:name>Module</maml:name>
        <maml:description>
          <maml:para>Get document definitions in the specified modules. When specified, only document definitions from modules will be used. To additionally use document definitions in paths use `-Path` together with `-Module`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="n">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of a specific document definitions to use.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Tag</maml:name>
        <maml:description>
          <maml:para>One or more tags that the document definition must contain. If more then one tag is specified, all tags be present on the document definition to be evaluated.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>InstanceName</maml:name>
        <maml:description>
          <maml:para>The name of the resulting markdown file. During execution of this command, the variable `$InstanceName` will be available within the document definition for use by expressions.</maml:para>
          <maml:para>If InstanceName is not specified the name of the document definition will be used instead. If more then one InstanceName is specified, multiple markdown files will be generated in the order they were specified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="InputFormat">
        <maml:name>Format</maml:name>
        <maml:description>
          <maml:para>Configures the input format for when a string is passed in as a target object.</maml:para>
          <maml:para>When the `-InputObject` parameter or pipeline input is used, strings are treated as plain text by default. Set this option to either `Yaml`, `Json`, `PowerShellData` to have PSDocs deserialize the object.</maml:para>
          <maml:para>When the `-InputPath` parameter is used with a file path or URL. If the Detect format is used, the file extension will be used to automatically detect the format. When `-InputPath` is not used, `Detect` is the same as `None`.</maml:para>
          <maml:para>See `about_PSDocs_Options` for details.</maml:para>
          <maml:para>This parameter takes precedence over the `Input.Format` option if set.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">InputFormat</command:parameterValue>
        <dev:type>
          <maml:name>InputFormat</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="f">
        <maml:name>InputPath</maml:name>
        <maml:description>
          <maml:para>Instead of processing objects from the pipeline, import objects file the specified file paths.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="none">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>An input object that will be passed to each document and can be referenced within document blocks as `$TargetObject`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>The directory path to store markdown files created based on the specified document template. This path will be automatically created if it doesn't exist.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>When specified generated markdown will be returned to the pipeline instead of being written to file.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Option</maml:name>
        <maml:description>
          <maml:para>Additional options that configure PSDocs. A `PSDocumentOption` can be created by using the `New-PSDocumentOption` cmdlet. Alternatively a hashtable or path to YAML file can be specified with options.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSDocumentOption</command:parameterValue>
        <dev:type>
          <maml:name>PSDocumentOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>Specifies the file encoding for generated markdown files. By default, UTF-8 without byte order mark (BOM) will be used. To use UTF-8 with BOM specify `UTF8`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MarkdownEncoding</command:parameterValue>
        <dev:type>
          <maml:name>MarkdownEncoding</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Default</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="p">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>A list of paths to use document definitions from.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Culture</maml:name>
        <maml:description>
          <maml:para>A list of cultures for building documents such as en-AU , and en-US . Documents are written to culture specific subdirectories when multiple cultures are generated.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Convention</maml:name>
        <maml:description>
          <maml:para>Specifies the name of conventions to execute during document generation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Management.Automation.PSObject</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code># Create a new document definition called Sample in Sample.Doc.ps1
Set-Content -Path .\Sample.Doc.ps1 -Value @'
Document Sample {

    # Add an introduction section
    Section Introduction {

        # Add a comment
        "This is a sample file list from $TargetObject"

        # Generate a table
        Get-ChildItem -Path $TargetObject | Table -Property Name,PSIsContainer
    }
}
'@

# Discover document definitions in the current working path (and subdirectories) within .Doc.ps1 files
Invoke-PSDocument -Path .;</dev:code>
        <dev:remarks>
          <maml:para>Create markdown using *.Doc.ps1 files loaded from the current working directory.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- Example 2 --------------------------</maml:title>
        <dev:code># Create a new document definition called Sample in Sample.Doc.ps1
Set-Content -Path .\Sample.Doc.ps1 -Value @'
Document Sample {

    $object = $InputObject
    # Add an introduction section
    Section $InputObject.name {

        # Add a comment
        "This is a sample file list from $InputObject.folder"

        # Generate a table
        Get-ChildItem -Path $InputObject.folder | Table -Property Name,PSIsContainer
    }
}
'@
#Create PSObject with info we want to pass into markdown
$PSDocsInputObject = New-Object PSObject -property @{
    'name' = 'foldername'
    'folder' = 'C:\testfolder'
}

# Create document based on Sample.Doc.ps1 passing PSObject
Invoke-PSDocument -Path .\Sample.Doc.ps1 -InputObject $PSDocsInputObject;</dev:code>
        <dev:remarks>
          <maml:para>Create markdown using a Doc.ps1 file, passing a PSObject in to generate dynamic content.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/Microsoft/PSDocs/blob/main/docs/commands/PSDocs/en-US/Invoke-PSDocument.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-PSDocumentOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-PSDocumentOption</command:name>
      <command:verb>New</command:verb>
      <command:noun>PSDocumentOption</command:noun>
      <maml:description>
        <maml:para>Create options to configure document generation.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-PSDocumentOption cmdlet creates an options object that can be passed to PSDocs cmdlets to configure document generation behaviour.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-PSDocumentOption</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Option</maml:name>
          <maml:description>
            <maml:para>Additional options that configure document generation. Option also accepts a hashtable to configure options.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">PSDocumentOption</command:parameterValue>
          <dev:type>
            <maml:name>PSDocumentOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="InputFormat">
          <maml:name>Format</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.Format` option to configure the input format for when a string is passed in as a target object. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yaml</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Json</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellData</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Detect</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">InputFormat</command:parameterValue>
          <dev:type>
            <maml:name>InputFormat</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Detect</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InputObjectPath</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.ObjectPath` option to use an object path to use instead of the pipeline object. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InputPathIgnore</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.PathIgnore` option. If specified, files that match the path spec will not be processed. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="MarkdownEncoding">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>Sets the option `Markdown.Encoding`. Specifies the file encoding for generated markdown files. By default, UTF-8 without byte order mark (BOM) will be used. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Unicode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF32</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ASCII</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">MarkdownEncoding</command:parameterValue>
          <dev:type>
            <maml:name>MarkdownEncoding</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Default</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="OutputCulture">
          <maml:name>Culture</maml:name>
          <maml:description>
            <maml:para>Sets the option `Output.Culture`. Specifies a list of cultures for building documents such as en-AU , and en-US . See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>Sets the option `Output.Path`. The option specified one or more custom field bindings. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-PSDocumentOption</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>The path to a YAML file containing options.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>.\ps-docs.yaml</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="InputFormat">
          <maml:name>Format</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.Format` option to configure the input format for when a string is passed in as a target object. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yaml</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Json</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellData</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Detect</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">InputFormat</command:parameterValue>
          <dev:type>
            <maml:name>InputFormat</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Detect</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InputObjectPath</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.ObjectPath` option to use an object path to use instead of the pipeline object. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InputPathIgnore</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.PathIgnore` option. If specified, files that match the path spec will not be processed. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="MarkdownEncoding">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>Sets the option `Markdown.Encoding`. Specifies the file encoding for generated markdown files. By default, UTF-8 without byte order mark (BOM) will be used. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Unicode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF32</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ASCII</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">MarkdownEncoding</command:parameterValue>
          <dev:type>
            <maml:name>MarkdownEncoding</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Default</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="OutputCulture">
          <maml:name>Culture</maml:name>
          <maml:description>
            <maml:para>Sets the option `Output.Culture`. Specifies a list of cultures for building documents such as en-AU , and en-US . See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>Sets the option `Output.Path`. The option specified one or more custom field bindings. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-PSDocumentOption</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Default</maml:name>
          <maml:description>
            <maml:para>When specified, defaults are used for any options not overridden.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="InputFormat">
          <maml:name>Format</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.Format` option to configure the input format for when a string is passed in as a target object. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Yaml</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Json</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">PowerShellData</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Detect</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">InputFormat</command:parameterValue>
          <dev:type>
            <maml:name>InputFormat</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Detect</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InputObjectPath</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.ObjectPath` option to use an object path to use instead of the pipeline object. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>InputPathIgnore</maml:name>
          <maml:description>
            <maml:para>Sets the `Input.PathIgnore` option. If specified, files that match the path spec will not be processed. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="MarkdownEncoding">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>Sets the option `Markdown.Encoding`. Specifies the file encoding for generated markdown files. By default, UTF-8 without byte order mark (BOM) will be used. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF8</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF7</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Unicode</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">UTF32</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ASCII</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">MarkdownEncoding</command:parameterValue>
          <dev:type>
            <maml:name>MarkdownEncoding</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Default</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="OutputCulture">
          <maml:name>Culture</maml:name>
          <maml:description>
            <maml:para>Sets the option `Output.Culture`. Specifies a list of cultures for building documents such as en-AU , and en-US . See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
          <dev:type>
            <maml:name>String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>Sets the option `Output.Path`. The option specified one or more custom field bindings. See about_PSDocs_Options for more information.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Option</maml:name>
        <maml:description>
          <maml:para>Additional options that configure document generation. Option also accepts a hashtable to configure options.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">PSDocumentOption</command:parameterValue>
        <dev:type>
          <maml:name>PSDocumentOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>The path to a YAML file containing options.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>.\ps-docs.yaml</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Default</maml:name>
        <maml:description>
          <maml:para>When specified, defaults are used for any options not overridden.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="InputFormat">
        <maml:name>Format</maml:name>
        <maml:description>
          <maml:para>Sets the `Input.Format` option to configure the input format for when a string is passed in as a target object. See about_PSDocs_Options for more information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">InputFormat</command:parameterValue>
        <dev:type>
          <maml:name>InputFormat</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Detect</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>InputObjectPath</maml:name>
        <maml:description>
          <maml:para>Sets the `Input.ObjectPath` option to use an object path to use instead of the pipeline object. See about_PSDocs_Options for more information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>InputPathIgnore</maml:name>
        <maml:description>
          <maml:para>Sets the `Input.PathIgnore` option. If specified, files that match the path spec will not be processed. See about_PSDocs_Options for more information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="MarkdownEncoding">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>Sets the option `Markdown.Encoding`. Specifies the file encoding for generated markdown files. By default, UTF-8 without byte order mark (BOM) will be used. See about_PSDocs_Options for more information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">MarkdownEncoding</command:parameterValue>
        <dev:type>
          <maml:name>MarkdownEncoding</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Default</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="OutputCulture">
        <maml:name>Culture</maml:name>
        <maml:description>
          <maml:para>Sets the option `Output.Culture`. Specifies a list of cultures for building documents such as en-AU , and en-US . See about_PSDocs_Options for more information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>Sets the option `Output.Path`. The option specified one or more custom field bindings. See about_PSDocs_Options for more information.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>PSDocs.Configuration.PSDocumentOption</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- Example 1 --------------------------</maml:title>
        <dev:code>PS C:\&gt; $option = New-PSDocumentOption -Option @{ 'Markdown.WrapSeparator' = '&lt;br /&gt;' };
PS C:\&gt; Invoke-PSDocument -Name 'Sample' -Option $option;</dev:code>
        <dev:remarks>
          <maml:para>Create markdown using the Sample documentation definition using a wrap separator of `&lt;br /&gt;`.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://github.com/Microsoft/PSDocs/blob/main/docs/commands/PSDocs/en-US/New-PSDocumentOption.md</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-PSDocument</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>